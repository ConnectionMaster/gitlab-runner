// Code generated by mockery v1.0.0. DO NOT EDIT.

package git

import mock "github.com/stretchr/testify/mock"

// MockGit is an autogenerated mock type for the Git type
type MockGit struct {
	mock.Mock
}

// Describe provides a mock function with given fields: opts
func (_m *MockGit) Describe(opts *DescribeOpts) (string, error) {
	ret := _m.Called(opts)

	var r0 string
	if rf, ok := ret.Get(0).(func(*DescribeOpts) string); ok {
		r0 = rf(opts)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*DescribeOpts) error); ok {
		r1 = rf(opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Log provides a mock function with given fields: query, opts
func (_m *MockGit) Log(query string, opts *LogOpts) ([]byte, error) {
	ret := _m.Called(query, opts)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, *LogOpts) []byte); ok {
		r0 = rf(query, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *LogOpts) error); ok {
		r1 = rf(query, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
