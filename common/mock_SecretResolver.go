// Code generated by mockery v1.1.0. DO NOT EDIT.

package common

import mock "github.com/stretchr/testify/mock"

// MockSecretResolver is an autogenerated mock type for the SecretResolver type
type MockSecretResolver struct {
	mock.Mock
}

// IsSupported provides a mock function with given fields:
func (_m *MockSecretResolver) IsSupported() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *MockSecretResolver) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Resolve provides a mock function with given fields: variableKey
func (_m *MockSecretResolver) Resolve(variableKey string) (*JobVariable, error) {
	ret := _m.Called(variableKey)

	var r0 *JobVariable
	if rf, ok := ret.Get(0).(func(string) *JobVariable); ok {
		r0 = rf(variableKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*JobVariable)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(variableKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
